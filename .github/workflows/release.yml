name: Create Release

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  
jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
        include:
          - os: windows-latest
            deploy: |
              mkdir "$GITHUB_WORKSPACE/deploy"
              mv "$GITHUB_WORKSPACE/build/Release/cygnus.exe" "$GITHUB_WORKSPACE/deploy"
              "$GITHUB_WORKSPACE/deploy.ps1"
            artifactName: CygnusCrosswordsSetup.exe
            artifactPath: "$GITHUB_WORKSPACE/CygnusCrosswordsSetup.exe"
          - os: macos-latest
            deploy: macdeployqt "$GITHUB_WORKSPACE/build/Cygnus.app" --release --no-translations
            artifactName: Cygnus.app
            artifactPath: "$GITHUB_WORKSPACE/build/Cygnus.app/"
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - name: Install Qt
      uses: jurplel/install-qt-action@v2
    - name: Configure CMake
      run: |
        mkdir -p "$GITHUB_WORKSPACE/build"
        cd "$GITHUB_WORKSPACE/build"
        cmake -DCMAKE_BUILD_TYPE=Release "$GITHUB_WORKSPACE/src"
    - name: Build
      run: |
        cd "$GITHUB_WORKSPACE/build"
        cmake --build . --config Release
    - name: Deploy QT
      run: ${{ matrix.deploy }}
    - name: Make NSIS Installer
      if: matrix.os == 'windows-latest'
      uses: joncloud/makensis-action@v1
    - name: Upload Artifact
      uses: actions/upload-artifact@v1
      with:
        name: ${{ matrix.artifactName }}
        path: ${{ matrix.artifactPath }}
